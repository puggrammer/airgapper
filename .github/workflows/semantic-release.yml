name: Semantic Release

on:
  push:
    branches:
      - master
      - fix-deb-publish

jobs:
  release:
    runs-on: ubuntu-22.04
    concurrency: release
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        python-version: ["3.11"]
        #["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Build Release Whl Distribution
      run: |
        python -m pip install build
        python -m build
        
    - name: Build Deb Distribution
      run: |
        python -m pip install pyinstaller requests
        cd airgapper-deb
        pyinstaller --name=airgapper --onefile --windowed ../src/airgapper/__main__.py

    - name: Upload Python Whl distribution
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/

    - name: Upload Deb distribution
      uses: actions/upload-artifact@v4
      with:
        name: airgapper
        path: airgapper-deb/dist/airgapper
          
    # - name: Determine Package Semantic Versioning 
    #   uses: python-semantic-release/python-semantic-release@v9.8.7
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
        
    # - name: Create GitHub Release 
    #   uses: python-semantic-release/upload-to-gh-release@v9.8.7
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
  
    # - name: Publish to GitHub Releases using semantic-release publish-action
    #   uses: python-semantic-release/publish-action@v9.8.7 
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     release_asset: airgapper-deb/dist/airgapper
    #     asset_name: airgapper.deb
    #     asset_content_type: application/vnd.debian.binary-package
    #     draft: false  # Set to true if you want to create a draft release
    #     prerelease: false  # Set to true if you want to make it a prerelease

    - name: Action | Semantic Version Release (Determine Package Semantic Versioning)
      # Adjust tag with desired version if applicable.
      uses: python-semantic-release/python-semantic-release@v10.2.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        git_committer_name: "github-actions"
        git_committer_email: "actions@users.noreply.github.com"

    - name: Publish | Upload to GitHub Release Assets
      uses: python-semantic-release/publish-action@v10.2.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}

    # - name: Upload | Distribution Artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: distribution-artifacts
    #     path: dist
    #     if-no-files-found: error
        
  pypi-publish:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      id-token: write
    steps:
    - name: Retrieve release distributions
      uses: actions/download-artifact@v4
      with:
        name: release-dists
        path: dist/

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
      # See https://github.com/actions/runner/issues/1173
      # if: steps.release.outputs.released == 'true'
